<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/bin/intersect remove_internal_shells=true /home/runner/work/geogram/geogram/tests/data/Intersections/rot_seven_cubes.obj</line>
</preamble>

<pid>12142</pid>
<ppid>6408</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--verbose</arg>
    <arg>--xml=yes</arg>
    <arg>--leak-check=full</arg>
    <arg>--show-reachable=yes</arg>
    <arg>--error-limit=no</arg>
    <arg>--xml-file=intersect169.memcheck</arg>
    <arg>--suppressions=/home/runner/work/geogram/geogram/tools/valgrind.supp</arg>
  </vargv>
  <argv>
    <exe>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/bin/intersect</exe>
    <arg>remove_internal_shells=true</arg>
    <arg>/home/runner/work/geogram/geogram/tests/data/Intersections/rot_seven_cubes.obj</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.022 </time>
</status>


<status>
  <state>FINISHED</state>
  <time>00:00:00:13.190 </time>
</status>

<error>
  <unique>0x4</unique>
  <tid>1</tid>
  <kind>Leak_IndirectlyLost</kind>
  <xwhat>
    <text>513 bytes in 1 blocks are indirectly lost in loss record 5 of 8</text>
    <leakedbytes>513</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x50288AF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x501E366</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int)</fn>
    </frame>
    <frame>
      <ip>0x5026B89</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long)</fn>
    </frame>
    <frame>
      <ip>0x5018853</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long)</fn>
    </frame>
    <frame>
      <ip>0x4A78C18</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned long, unsigned long)#2}::operator()(unsigned long, unsigned long) const</fn>
    </frame>
    <frame>
      <ip>0x492F2A4</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>(anonymous namespace)::ParallelForSliceThread::run()</fn>
    </frame>
    <frame>
      <ip>0x4934DE6</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>(anonymous namespace)::PThreadManager::run_thread(void*)</fn>
    </frame>
    <frame>
      <ip>0x52DE608</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpthread-2.31.so</obj>
      <fn>start_thread</fn>
      <dir>/build/glibc-LcI20x/glibc-2.31/nptl</dir>
      <file>pthread_create.c</file>
      <line>477</line>
    </frame>
    <frame>
      <ip>0x5201352</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc-2.31.so</obj>
      <fn>clone</fn>
      <dir>/build/glibc-LcI20x/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64</dir>
      <file>clone.S</file>
      <line>95</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>625 (112 direct, 513 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 8</text>
    <leakedbytes>625</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x49294C7</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>GEO::Logger::Logger()</fn>
    </frame>
    <frame>
      <ip>0x49299BC</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>GEO::Logger::initialize()</fn>
    </frame>
    <frame>
      <ip>0x4900C8D</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>GEO::(anonymous namespace)::GeogramLibSingleton::GeogramLibSingleton(int) [clone .isra.0]</fn>
    </frame>
    <frame>
      <ip>0x4901BEE</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>GEO::initialize(int)</fn>
    </frame>
    <frame>
      <ip>0x10BD7E</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Release/bin/intersect</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<errorcounts>
</errorcounts>

<suppcounts>
  <pair>
    <count>3</count>
    <name>Vorpaline_gomp_64bits_leak_2</name>
  </pair>
  <pair>
    <count>2</count>
    <name>Vorpaline_gomp_64bits_leak_4</name>
  </pair>
  <pair>
    <count>1</count>
    <name>Vorpaline_gomp_64bits_leak_1</name>
  </pair>
</suppcounts>

</valgrindoutput>

