<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/bin/intersect remove_internal_shells=true /home/runner/work/geogram/geogram/tests/data/Intersections/classif_2.obj</line>
</preamble>

<pid>13689</pid>
<ppid>6522</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--verbose</arg>
    <arg>--xml=yes</arg>
    <arg>--leak-check=full</arg>
    <arg>--show-reachable=yes</arg>
    <arg>--error-limit=no</arg>
    <arg>--xml-file=intersect163.memcheck</arg>
    <arg>--suppressions=/home/runner/work/geogram/geogram/tools/valgrind.supp</arg>
  </vargv>
  <argv>
    <exe>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/bin/intersect</exe>
    <arg>remove_internal_shells=true</arg>
    <arg>/home/runner/work/geogram/geogram/tests/data/Intersections/classif_2.obj</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.022 </time>
</status>


<status>
  <state>FINISHED</state>
  <time>00:00:00:35.821 </time>
</status>

<error>
  <unique>0x4</unique>
  <tid>1</tid>
  <kind>Leak_IndirectlyLost</kind>
  <xwhat>
    <text>513 bytes in 1 blocks are indirectly lost in loss record 5 of 8</text>
    <leakedbytes>513</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x53518AF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5347366</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int)</fn>
    </frame>
    <frame>
      <ip>0x534FB89</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long)</fn>
    </frame>
    <frame>
      <ip>0x5341853</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long)</fn>
    </frame>
    <frame>
      <ip>0x4BD0ADE</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned long, unsigned long)#2}::operator()(unsigned long, unsigned long) const</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/mesh</dir>
      <file>mesh_surface_intersection.cpp</file>
      <line>652</line>
    </frame>
    <frame>
      <ip>0x4BDF39C</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>std::_Function_handler&lt;void (unsigned long, unsigned long), GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned long, unsigned long)#2}&gt;::_M_invoke(std::_Any_data const&amp;, unsigned long&amp;&amp;, std::_Any_data const&amp;)</fn>
      <dir>/usr/include/c++/9/bits</dir>
      <file>std_function.h</file>
      <line>300</line>
    </frame>
    <frame>
      <ip>0x4A050E9</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>std::function&lt;void (unsigned long, unsigned long)&gt;::operator()(unsigned long, unsigned long) const</fn>
      <dir>/usr/include/c++/9/bits</dir>
      <file>std_function.h</file>
      <line>688</line>
    </frame>
    <frame>
      <ip>0x4A02A47</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>(anonymous namespace)::ParallelForSliceThread::run()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>process.cpp</file>
      <line>694</line>
    </frame>
    <frame>
      <ip>0x4A06DC1</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>(anonymous namespace)::PThreadManager::run_thread(void*)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>process_unix.cpp</file>
      <line>181</line>
    </frame>
    <frame>
      <ip>0x5607608</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpthread-2.31.so</obj>
      <fn>start_thread</fn>
      <dir>/build/glibc-LcI20x/glibc-2.31/nptl</dir>
      <file>pthread_create.c</file>
      <line>477</line>
    </frame>
    <frame>
      <ip>0x552A352</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc-2.31.so</obj>
      <fn>clone</fn>
      <dir>/build/glibc-LcI20x/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64</dir>
      <file>clone.S</file>
      <line>95</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>625 (112 direct, 513 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 8</text>
    <leakedbytes>625</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x49F3FCD</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>(anonymous namespace)::CERRStream::CERRStream()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>logger.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x49F5FF9</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>GEO::Logger::Logger()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>logger.cpp</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x49F5178</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>GEO::Logger::initialize()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>logger.cpp</file>
      <line>226</line>
    </frame>
    <frame>
      <ip>0x49A09B5</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>GEO::(anonymous namespace)::GeogramLibSingleton::GeogramLibSingleton(int)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>common.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x49A0611</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>std::_Optional_payload_base&lt;GEO::(anonymous namespace)::GeogramLibSingleton&gt;::_Storage&lt;GEO::(anonymous namespace)::GeogramLibSingleton, false&gt;::_Storage&lt;int&amp;&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/9</dir>
      <file>optional</file>
      <line>223</line>
    </frame>
    <frame>
      <ip>0x49A0668</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>std::_Optional_payload_base&lt;GEO::(anonymous namespace)::GeogramLibSingleton&gt;::_Optional_payload_base&lt;int&amp;&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/9</dir>
      <file>optional</file>
      <line>115</line>
    </frame>
    <frame>
      <ip>0x49A04DD</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>std::_Optional_payload&lt;GEO::(anonymous namespace)::GeogramLibSingleton, true, false, false&gt;::_Optional_payload_base&lt;int&amp;&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/9</dir>
      <file>optional</file>
      <line>356</line>
    </frame>
    <frame>
      <ip>0x49A0565</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>std::_Optional_payload&lt;GEO::(anonymous namespace)::GeogramLibSingleton, false, false, false&gt;::_Optional_payload_base&lt;int&amp;&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/9</dir>
      <file>optional</file>
      <line>390</line>
    </frame>
    <frame>
      <ip>0x49A05B8</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>std::_Optional_base&lt;GEO::(anonymous namespace)::GeogramLibSingleton, false, false&gt;::_Optional_base&lt;int&amp;, false&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/9</dir>
      <file>optional</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x49A0450</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>std::optional&lt;GEO::(anonymous namespace)::GeogramLibSingleton&gt;::optional&lt;int&amp;, true&gt;(int&amp;)</fn>
      <dir>/usr/include/c++/9</dir>
      <file>optional</file>
      <line>699</line>
    </frame>
    <frame>
      <ip>0x49A072A</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.2-rc</obj>
      <fn>GEO::(anonymous namespace)::GeogramLibSingleton::instance(int)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>common.cpp</file>
      <line>79</line>
    </frame>
  </stack>
</error>

<errorcounts>
</errorcounts>

<suppcounts>
  <pair>
    <count>3</count>
    <name>Vorpaline_gomp_64bits_leak_2</name>
  </pair>
  <pair>
    <count>2</count>
    <name>Vorpaline_gomp_64bits_leak_4</name>
  </pair>
  <pair>
    <count>1</count>
    <name>Vorpaline_gomp_64bits_leak_1</name>
  </pair>
</suppcounts>

</valgrindoutput>

